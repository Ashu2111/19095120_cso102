#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct
{
    int *a;
    int front,rear;
}Deck;
Deck Q;
int N;
void insertFront(int item)
{
   if(Q.rear==N-1)
     return;
   if(Q.front==-1)
   {
       Q.front=Q.rear=0;
       Q.a[0]=item;
       return;
   }
   for(int i=Q.rear;i>=0;i--)
     Q.a[i+1]=Q.a[i];
     Q.rear++;
   Q.a[0]=item;
}
void insertLast(int item)
{
   if(Q.rear==N-1)
    return;
   if(Q.rear==-1)
       Q.front++;
   Q.a[++Q.rear]=item;
}
int deleteFront()
{
   int data=Q.a[0];
   for(int i=0;i<Q.rear;i++)
    Q.a[i]=Q.a[i+1];
    Q.rear--;
   return data;
}
int deleteLast()
{
  int data=Q.a[Q.rear--];
  return data;
}
int getFront()
{
    if(Q.front==-1)
        return;
    return(Q.a[0]);
}
int getRear()
{
    if(Q.rear==-1)
        return;
    return(Q.a[Q.rear]);
}
char* isEmpty()
{
    if(Q.rear==-1)
       return("Yes");
    return("No");
}
char* isFull(int n)
{
    if(Q.rear==n)
       return("Yes");
    return("No");
}
int main()
{
    Q.front=Q.rear=-1;
    int M,count=0,p[100];
    scanf("%d",&N);
    Q.a=(int *)malloc(N*sizeof(int));
    scanf("%d",&M);
    for(int i=0;i<M;i++)
    {
        char s[50],c[3];
        fflush(stdin);
        gets(s);
        if(s[0]=='a'&&s[3]=='F')
        {
            int j,k;
            for(j=9;s[j]!='\0';j++)
                c[j-9]=s[j];
                c[j-9]='\0';
                k=atoi(c);
                insertFront(k);
        }
        else if(s[0]=='a'&&s[3]=='R')
        {
            int j,k;
            for(j=8;s[j]!='\0';j++)
                c[j-8]=s[j];
                c[j-8]='\0';
                k=atoi(c);
                insertLast(k);
        }
        else if(s[0]=='D'&&s[4]=='F')
            p[count++]=deleteFront();
        else if(s[0]=='D'&&s[4]=='R')
            p[count++]=deleteLast();
        else if(s[0]=='P'&&s[4]=='F')
            p[count++]=getFront();
        else if(s[0]=='P'&&s[4]=='R')
            p[count++]=getRear();
        else if(s[2]=='E')
            {
                if(strcmp(isEmpty(),"Yes")==0)
                  p[count++]=0;
                else
                  p[count++]=-1;
            }
        else if(s[2]=='F')
            {
              if(strcmp(isFull(N-1),"Yes")==0)
                p[count++]=0;
              else
                p[count++]=-1;
            }
    }
    printf("\n");
    for(int i=0;i<count;i++)
    {
        if(p[i]==0)
            printf("\nYes");
        else if(p[i]==-1)
            printf("\nNo");
        else
            printf("\n%d",p[i]);
    }
return 0;
}
